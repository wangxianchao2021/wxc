<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd  
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
     <!-- 启用spring mvc 注解-->  
   <!-- <mvc:annotation-driven>-->     
   <!-- </mvc:annotation-driven>  -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />  
    
     <!-- 自动扫描的包名 ，使Spring支持自动检测组件，如注解的Controller-->  
    <context:component-scan base-package="com.wxc.action" />
      
    <!-- 视图解析器:定义跳转的文件的前后缀 -->    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">      
        <property name="prefix" value="/WEB-INF/jsp/" />   
        <property name="suffix" value=".jsp" />   <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->  
    </bean>   
<!--     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="order" value="10"></property>  
        <property name="prefix" value="/"></property>  
        <property name="contentType" value="text/html"></property>  
    </bean> -->
     <mvc:resources mapping="/static/**" location="/static/" />
    <!-- <mvc:resources mapping="login.jsp" location="/login.jsp" />-->
    <!--配置拦截器, 多个拦截器,顺序执行 -->   
  <!--   <mvc:interceptors>    -->
       <!--    <mvc:interceptor>     -->
            <!-- 匹配的是url路径  -->  
<!--             <mvc:mapping path="/" />  -->         
           <!--  <mvc:mapping path="/user/**" />  --> 
            <!-- <mvc:mapping path="/test/**" /> -->  
              
            <!-- <bean class="com.alibaba.interceptor.CommonInterceptor"></bean>  -->
       <!--  </mvc:interceptor>  --> 
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
    <!-- </mvc:interceptors>   -->
     
     <!-- 该语句可以使AOP和Spring MVC生效 -->  
    <aop:aspectj-autoproxy />  
   	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	<property name="interceptors">
		<list>
			<ref bean="testInterceptor"/>
		</list>
	</property>
	</bean>
	<bean id="testInterceptor" class="com.wxc.aop.TestInterceptor"/>
</beans>     